import os
import numpy as np
import matplotlib.pyplot as plt

plt.rcParams["figure.figsize"] = (10, 7.7)

steps = [3, 6, 12, 18, 24]

threshs_per_step = {
    3: [0.001, 0.005, 0.01, 0.02, 0.05, 0.1],
    6: [0.001, 0.005, 0.01, 0.02, 0.05, 0.1, 0.15],
    12: [0.001, 0.005, 0.01, 0.02, 0.05, 0.1, 0.15, 0.2],
    18: [0.001, 0.005, 0.01, 0.02, 0.05, 0.1, 0.15, 0.2, 0.3],
    24: [0.001, 0.005, 0.01, 0.02, 0.05, 0.1, 0.15, 0.2, 0.3]
}

# This can be copied from the sheet logger.
data = {'Zero-Velocity': {
    3: [0.327360779047012, 0.52913635969162, 0.672484576702118, 0.817594707012177, 0.943179905414581,
        0.982795417308807],
    6: [0.30310732126236, 0.455205827951431, 0.575262367725372, 0.717712461948395, 0.882354736328125, 0.954610645771027,
        0.977101802825928],
    12: [0.284358978271484, 0.392873913049698, 0.485381454229355, 0.608531773090363, 0.789356291294098,
         0.898801147937775, 0.941458225250244, 0.962827861309052],
    18: [0.27611643075943, 0.36294162273407, 0.441259771585465, 0.550507843494415, 0.728170096874237, 0.854315757751465,
         0.909133672714233, 0.938775599002838, 0.968147397041321],
    24: [0.27138814330101, 0.344926208257675, 0.414378196001053, 0.514341175556183, 0.685811817646027,
         0.819736957550049, 0.882426083087921, 0.917687237262726, 0.954649984836578]}, 'Seq2seq': {
    3: [0.289003163576126, 0.645877063274384, 0.814716100692749, 0.929250717163086, 0.986117899417877,
        0.994525253772736],
    6: [0.248906955122948, 0.494114875793457, 0.665640890598297, 0.821879208087921, 0.950914680957794,
        0.985596656799316, 0.992399871349335],
    12: [0.225495919585228, 0.366212606430054, 0.49432846903801, 0.653199851512909, 0.848824679851532,
         0.942162692546845, 0.971028327941895, 0.982939898967743],
    18: [0.217154160141945, 0.315154403448105, 0.411006808280945, 0.548449695110321, 0.759464383125305,
         0.887021243572235, 0.937316179275513, 0.961048364639282, 0.981584548950195],
    24: [0.212917730212212, 0.287998467683792, 0.364211648702621, 0.481207937002182, 0.689062893390656,
         0.835334122180939, 0.900958299636841, 0.935041606426239, 0.967329204082489]}, 'Seq2seq-SPL': {
    3: [0.335734456777573, 0.610700786113739, 0.775699377059937, 0.905595779418945, 0.980865001678467,
        0.993812263011932],
    6: [0.304089277982712, 0.504281044006348, 0.651762127876282, 0.801684677600861, 0.939924716949463,
        0.982031881809235, 0.991118490695953],
    12: [0.282334506511688, 0.413786292076111, 0.526380479335785, 0.664679169654846, 0.845059812068939,
         0.936422169208527, 0.967216432094574, 0.980638027191162],
    18: [0.269758254289627, 0.372653752565384, 0.463703960180283, 0.585651516914368, 0.769871532917023,
         0.88706386089325, 0.93432754278183, 0.958383798599243, 0.979869544506073],
    24: [0.262574762105942, 0.348924666643143, 0.426104694604874, 0.534707963466644, 0.714369773864746,
         0.844512462615967, 0.902601063251495, 0.934511959552765, 0.965898990631104]}, 'Seq2seq-sampling': {
    3: [0.29696661233902, 0.540617406368256, 0.700221955776215, 0.850262224674225, 0.962456285953522,
        0.988915741443634],
    6: [0.259395956993103, 0.455982685089111, 0.595571041107178, 0.750080645084381, 0.913085162639618,
        0.971435308456421, 0.986141264438629],
    12: [0.233371913433075, 0.379694610834122, 0.49510869383812, 0.636963546276093, 0.829734861850739,
         0.929620563983917, 0.963557660579681, 0.978280544281006],
    18: [0.223566189408302, 0.337612062692642, 0.441411107778549, 0.574201881885529, 0.772008121013641,
         0.893171012401581, 0.940140962600708, 0.962724149227142, 0.982324481010437],
    24: [0.218379974365234, 0.311887890100479, 0.407845735549927, 0.532903730869293, 0.730975866317749,
         0.863297760486603, 0.919587314128876, 0.948212623596191, 0.974599838256836]}, 'Seq2seq-sampling-SPL': {
    3: [0.326728582382202, 0.552932500839233, 0.711575210094452, 0.857458889484406, 0.96394944190979,
        0.989460706710815],
    6: [0.300423741340637, 0.472393780946732, 0.607667505741119, 0.759241282939911, 0.916478335857391,
        0.972615718841553, 0.986797094345093],
    12: [0.276745319366455, 0.403837114572525, 0.510275483131409, 0.648190677165985, 0.83502984046936,
         0.932310998439789, 0.965198755264282, 0.979383647441864],
    18: [0.263281226158142, 0.371139377355576, 0.462115556001663, 0.587358713150024, 0.778951346874237,
         0.896720051765442, 0.942556798458099, 0.964572668075562, 0.983032941818237],
    24: [0.254204422235489, 0.351390570402145, 0.432831436395645, 0.549273669719696, 0.739622831344605,
         0.868225395679474, 0.922592103481293, 0.950313568115234, 0.975671768188477]}, 'Seq2seq-dropout': {
    3: [0.326452761888504, 0.670910775661469, 0.831530749797821, 0.938169300556183, 0.987442970275879,
        0.994848072528839],
    6: [0.276076048612595, 0.534537315368652, 0.693196713924408, 0.840896606445313, 0.957465827465057,
        0.987328588962555, 0.993139684200287],
    12: [0.240370154380798, 0.410499095916748, 0.540434181690216, 0.689862489700317, 0.867857217788696,
         0.951464593410492, 0.976198971271515, 0.985916078090668],
    18: [0.227208197116852, 0.352595061063767, 0.461952954530716, 0.59866601228714, 0.7903932929039, 0.905731499195099,
         0.949466466903687, 0.969357073307037, 0.985783815383911],
    24: [0.220517933368683, 0.320481866598129, 0.412774056196213, 0.538349151611328, 0.731595516204834,
         0.863852679729462, 0.920946836471558, 0.949932754039764, 0.975837409496307]}, 'Seq2seq-dropout-SPL': {
    3: [0.363061636686325, 0.673412621021271, 0.829728305339813, 0.936238944530487, 0.987194061279297,
        0.994807779788971],
    6: [0.321680784225464, 0.550430417060852, 0.700047075748444, 0.84002548456192, 0.955952405929565, 0.986719846725464,
        0.992907524108887],
    12: [0.292793214321137, 0.444898456335068, 0.563480317592621, 0.701982319355011, 0.870702087879181,
         0.950023651123047, 0.974811732769013, 0.985046803951263],
    18: [0.281329035758972, 0.397114634513855, 0.495592325925827, 0.621298551559448, 0.80025440454483,
         0.907128214836121, 0.948539316654205, 0.968598067760468, 0.985077619552612],
    24: [0.272251605987549, 0.369558781385422, 0.454919964075089, 0.569408357143402, 0.747391045093536,
         0.868731498718262, 0.921660602092743, 0.949962139129639, 0.975285053253174]}, 'RNN': {
    3: [0.319007247686386, 0.544578969478607, 0.706221401691437, 0.856241643428803, 0.967238426208496,
        0.990604102611542],
    6: [0.28980016708374, 0.461565107107163, 0.595547497272492, 0.749482154846191, 0.913397967815399, 0.97310334444046,
        0.987123310565949],
    12: [0.257590025663376, 0.392073601484299, 0.493220329284668, 0.626330077648163, 0.816200792789459,
         0.922163307666779, 0.959688603878021, 0.975909650325775],
    18: [0.241811141371727, 0.357585608959198, 0.442557871341705, 0.558790743350983, 0.746713280677795,
         0.873106598854065, 0.926550328731537, 0.953297853469849, 0.977236330509186],
    24: [0.232815325260162, 0.336104363203049, 0.411580234766006, 0.515633404254913, 0.696439504623413,
         0.831828355789185, 0.895340621471405, 0.929597139358521, 0.963778734207153]}, 'RNN-SPL': {
    3: [0.354358345270157, 0.653268754482269, 0.815738439559937, 0.929116249084473, 0.986097633838654,
        0.994935512542725],
    6: [0.317988276481628, 0.544982552528381, 0.70035982131958, 0.84562474489212, 0.959597766399384, 0.988034725189209,
        0.993597090244293],
    12: [0.29194238781929, 0.448510259389877, 0.576003849506378, 0.722687959671021, 0.891473293304443,
         0.961504638195038, 0.981202840805054, 0.988927602767944],
    18: [0.281041979789734, 0.402846157550812, 0.510491251945496, 0.647031664848328, 0.831896185874939,
         0.929632902145386, 0.963431477546692, 0.978208243846893, 0.98930811882019],
    24: [0.274023026227951, 0.375790268182755, 0.470148116350174, 0.596681654453278, 0.785011351108551,
         0.899991512298584, 0.944362878799439, 0.965543448925018, 0.983150899410248]}, 'QuaterNet': {
    3: [0.321273803710938, 0.587671518325806, 0.756180942058563, 0.893899500370026, 0.976964175701141,
        0.99259489774704],
    6: [0.291730493307114, 0.488229751586914, 0.638135552406311, 0.793862581253052, 0.936659336090088,
        0.980596005916596, 0.990334987640381],
    12: [0.269207268953323, 0.400941580533981, 0.518916428089142, 0.665960490703583, 0.852937459945679,
         0.942579746246338, 0.970409452915192, 0.98219496011734],
    18: [0.255261778831482, 0.360734403133392, 0.45883771777153, 0.591871798038483, 0.78725790977478, 0.903682410717011,
         0.946360170841217, 0.966406583786011, 0.983794093132019],
    24: [0.245322063565254, 0.33774209022522, 0.422075897455215, 0.544321715831757, 0.738980531692505,
         0.870064795017242, 0.923490047454834, 0.950384914875031, 0.975302696228027]}, 'QuaterNet-SPL': {
    3: [0.326452732086182, 0.597571909427643, 0.767702400684357, 0.902656614780426, 0.97991007566452,
        0.993556559085846],
    6: [0.294138342142105, 0.496815294027329, 0.648597657680512, 0.805088043212891, 0.943681180477142,
        0.983437538146973, 0.991649866104126],
    12: [0.269417434930801, 0.408227413892746, 0.529097735881805, 0.677224576473236, 0.863507091999054,
         0.949068367481232, 0.974488794803619, 0.985113918781281],
    18: [0.257300823926926, 0.367303371429443, 0.468074649572372, 0.603062510490418, 0.798868894577026,
         0.912009000778198, 0.95223069190979, 0.971160769462585, 0.986373484134674],
    24: [0.24867744743824, 0.342599868774414, 0.430595964193344, 0.55485862493515, 0.750426232814789, 0.879317939281464,
         0.930450439453125, 0.956257522106171, 0.978862285614014]}}

prop_cycle = plt.rcParams['axes.prop_cycle']
colors = prop_cycle.by_key()['color']

rnn_spl_color = colors[1]
base_color = colors[0]
zero_vel_color = 'k'
spl_style = '-'
non_spl_style = '--'
steps_to_visualize = [3, 6, 12, 18, 24]

to_visualize = [[("Zero-Velocity", non_spl_style, zero_vel_color),
                 ("Seq2seq-sampling", non_spl_style, base_color),
                 ("Seq2seq-sampling-SPL", spl_style, base_color),
                 ("RNN-SPL", spl_style, rnn_spl_color)],
                [("Zero-Velocity", non_spl_style, zero_vel_color),
                 ("Seq2seq", non_spl_style, base_color),
                 ("Seq2seq-SPL", spl_style, base_color),
                 ("RNN-SPL", spl_style, rnn_spl_color)],
                [("Zero-Velocity", non_spl_style, zero_vel_color),
                 ("Seq2seq-dropout", non_spl_style, base_color),
                 ("Seq2seq-dropout-SPL", spl_style, base_color),
                 ("RNN-SPL", spl_style, rnn_spl_color)],
                [("Zero-Velocity", non_spl_style, zero_vel_color),
                 ("QuaterNet", non_spl_style, base_color),
                 ("QuaterNet-SPL", spl_style, base_color),
                 ("RNN-SPL", spl_style, rnn_spl_color)],
                ]

titles = ['Seq2seq-sampling', 'Seq2seq', 'Seq2seq-dropout', 'QuaterNet']

legend_fontsize = 12
axes_fontsize = 12

for pred_horizon in steps_to_visualize:

    fig, axes = plt.subplots(2, 2, sharey=True)

    for p in range(2):
        for k in range(2):
            ax = axes[p, k]
            idx = k * 2 + p
            pcks = to_visualize[idx]
            threshs = threshs_per_step[pred_horizon]

            for label, linestyle, color in pcks:
                pck = data[label][pred_horizon]
                ax.plot(threshs, np.array(pck) * 100, linestyle, label=label, color=color)
                # marker='o', markersize=3)
            # ax.set_xticks(threshs)
            # ax.set_xticklabels([str(x) for x in threshs], fontsize=9)

            # if p == 1:
            ax.set_xlabel('threshold', fontsize=axes_fontsize)
            # if k == 0:
            ax.set_ylabel('% of correct keypoints', fontsize=axes_fontsize)
            ax.legend(fontsize=legend_fontsize, loc='lower right')
            ax.grid(alpha=0.5)
            ax.set_title(titles[idx], fontsize=legend_fontsize)

    fig.tight_layout()
    fig.suptitle("Prediction Horizon {} ms.".format(int(pred_horizon / 60 * 1000)))
    plt.subplots_adjust(top=0.9)
    fig.savefig(os.path.join('../imgs', 'pck_{}ms.svg'.format(int(pred_horizon / 60 * 1000))), transparent=True)

    # plt.show()
